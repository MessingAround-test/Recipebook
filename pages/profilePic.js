import Head from 'next/head'
// import Image from 'next/image'
import styles from '../styles/Home.module.css'
import React from "react"


import { Toolbar } from './Toolbar'
import { useEffect, useState } from 'react'
import Form from 'react-bootstrap/Form';
import Button from 'react-bootstrap/Button';
import Card from 'react-bootstrap/Card';
import Router from 'next/router'
import ProfilePicCombiner from './components/ProfilePicCombiner'
import ProfilePicDrawer from './components/ProfilePicDrawer'
import Container from 'react-bootstrap/Container'
import Row from 'react-bootstrap/Row'
import Col from 'react-bootstrap/Col'


export default function Home() {
    const [userData, setUserData] = useState({})
    const canvasRef = React.useRef(null);
    const [gameState, setGameState] = useState({ 'state': 'initial' })
    
    const gameStateTransitionMatrix = ["Hair", "Head", "Body", "Legs", "Feet"]
    

    const onCreateGame = async function(e) {
            e.preventDefault();
            setGameState({ 'state': 'game', 'substate': 0})
    }


    async function getUserDetails() {
        var data = await (await fetch("/api/UserDetails?EDGEtoken=" + localStorage.getItem('Token'))).json()
        console.log(data)
        setUserData(data.res)
    }

    async function generateProfilePic(n) {
        const canvas = canvasRef.current;
        const ctx = canvas.getContext('2d');
        var imageObj1 = new Image();
        imageObj1.src = 'https://s-media-cache-ak0.pinimg.com/236x/d7/b3/cf/d7b3cfe04c2dc44400547ea6ef94ba35.jpg'
        imageObj1.onload = function () {
            ctx.drawImage(imageObj1, 0, 0);
        }
    }



    async function UpdateUserDetails(e) {
        e.preventDefault();
        var data = await (await fetch("/api/UserDetails?EDGEtoken=" + localStorage.getItem('Token'), {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(userData)
        })).json()
        console.log(data)
        if (data.success === false || data.success === undefined) {
            if (data.message !== undefined) {
                alert(data.message)
            } else {
                alert("failed, unexpected error")
            }

        }
    }


    useEffect(() => {
        if (localStorage.getItem('Token') === null || localStorage.getItem('Token') === undefined) {
            alert("please re-log in")
            Router.push("/login")
        }

        getUserDetails();
        // generateProfilePic();
        // console.log(await data)
    }, []) // <-- empty dependency array







    return (
        <div>
            <Toolbar>
            </Toolbar>
            <div className={styles.container}>
                <Head>
                    <title>Profile</title>
                    <meta name="description" content="Generated by create next app" />
                    <link rel="icon" href="/favicon.ico" />
                </Head>
                <main className={styles.main}>
                    {gameState.state == "initial" ?
                        <Container>
                            <Row>
                                <Col>
                                    <Card style={{ width: '40vh', color: "black" }}>
                                        <Button onClick={() => setGameState({ 'state': 'createNewGame' })}>Create new Game</Button>
                                    </Card>
                                </Col>
                                <Col>
                                    <Card style={{ width: '40vh', color: "black" }}>
                                        <Button onClick={() => setGameState({ 'state': 'joinGame' })}>Join Game</Button>
                                    </Card>
                                </Col>
                            </Row>
                        </Container>
                        : gameState.state == "createNewGame" ? <>
                        <Container>
                            <Row >
                            <Card style={{ width: '40vh', color: "black","float": "none", "margin": "0 auto" }}>
                                {/* <Card.Img variant="top" src="/edge_login_image.png" /> */}
                                <Card.Body>
                                    <Card.Title>Create New Game</Card.Title>

                                    <Form onSubmit={(e) => onCreateGame(e)}>
                                        

                                        <Form.Group className="mb-3" id="formBasicPassword">
                                            <Form.Label>Game seed</Form.Label>
                                            <Form.Control name="GameSeed" id="GameSeed" type="text" placeholder="Game Seed"/>
                                            <Form.Label>Max Players</Form.Label>
                                            <Form.Control name="maxPlayers" id="maxPlayers" type="Number" placeholder="max Players"/>
                                        </Form.Group>
                                        {/* <Form.Group className="mb-3" controlId="formBasicCheckbox">
                                <Form.Check type="checkbox" label="Check me out" />
                            </Form.Group> */}
                                        <Button variant="primary" type="submit">
                                            Submit
                                        </Button>
                                        <Button variant="secondary" style={{ "float": "right" }} onClick={() => setGameState({ 'state': 'initial' })}>
                                            Back
                                            
                                        </Button>
                                    </Form>



                                </Card.Body>
                            </Card>
                            </Row>
                            </Container>

                        </> :
                        gameState.state == "game" ?
                         <>
                         <h1> Currently Drawing: {gameStateTransitionMatrix[gameState.substate]}</h1>
                            <ProfilePicDrawer setGameState={setGameState} gameState={gameState}></ProfilePicDrawer> 
                            
                         </>
                        : <></>
                        }
                    {/* <ProfilePicCombiner></ProfilePicCombiner>


                        <Button onClick={() => console.log(userData)}>SHow state</Button>
                        <ProfilePicDrawer></ProfilePicDrawer> */}
                </main>


            </div>
        </div>

    )
}
