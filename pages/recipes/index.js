import Head from 'next/head'
import Image from 'next/image'
import styles from '../../styles/Home.module.css'

import Row from 'react-bootstrap/Row'
import Col from 'react-bootstrap/Col'

import { Toolbar } from '../Toolbar'
import { useEffect, useState } from 'react'
import Button from 'react-bootstrap/Button';
import Router from 'next/router'
import ImageCard from '../../components/ImageCard'
import FormControl from 'react-bootstrap/FormControl';


export default function Home() {
    const [userData, setUserData] = useState({})
    const [recipes, setRecipes] = useState([])

    const [searchTerm, setSearchTerm] = useState()
    const [allowDelete, setAllowDelete] = useState(false)

    async function getUserDetails() {
        let data = await (await fetch("/api/UserDetails?EDGEtoken=" + localStorage.getItem('Token'))).json()
        console.log(data)
        setUserData(data.res)
    }

    async function getRecipeDetails() {
        let data = await (await fetch("/api/Recipe?EDGEtoken=" + localStorage.getItem('Token'))).json()
        console.log(data)
        setRecipes(data.res)
    }



    useEffect(() => {
        if (localStorage.getItem('Token') === null || localStorage.getItem('Token') === undefined) {
            alert("please re-log in")
            Router.push("/login")
        }

        getUserDetails();
        getRecipeDetails();
        // console.log(await data)
    }, []) // <-- empty dependency array

    useEffect(() => {
        setFilteredRecipes(filterList(recipes, searchTerm))
    }, [recipes, searchTerm])


    const redirect = async function (page) {
        Router.push(page)
    };

    // Check all the keys values for the search term
    function filterList(list, searchTerm) {
        if (searchTerm) {
            return list.filter(item =>
                Object.values(item).some(value =>
                    String(value).toLowerCase().includes(searchTerm.toLowerCase())
                )
            )
        }
        return list
    };

    const [filteredRecipes, setFilteredRecipes] = useState([])


    const deleteRecipe = async function (id) {

        let data = await (await fetch("/api/Recipe/" + String(id) + "?EDGEtoken=" + localStorage.getItem('Token'), {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
            })
        })).json()
        console.log(data)
        if (data.success === false || data.success === undefined) {
            if (data.message !== undefined) {
                alert(data.message)
            } else {
                alert("failed, unexpected error")
            }

        } else {
            const localRecipes = recipes;
            // Remove the recipe with the same ID which was just deleted from local state
            localRecipes = localRecipes.filter(function (obj) {
                return obj._id !== id;
            });
            setRecipes(localRecipes)
        }
    }

    const toggleMassDelete = async function () {
        setAllowDelete(!allowDelete)
    }

    const cardHeight = '15rem'


    return (
        <div>
            <Toolbar>
            </Toolbar>
            <div className={styles.container}>
                <Head>
                    <title>Recipes</title>
                    <meta name="description" content="Generated by create next app" />
                    <link rel="icon" href="/avo.ico" />
                </Head>


                <main className={styles.main}>

                    <Row>
                        <Col>
                            <div style={{ padding: "0.5vh" }}>
                                <Button variant="success" onClick={() => redirect("/createRecipe")}>Add recipe</Button>
                            </div>
                        </Col>
                        {userData.role === "admin" ?
                            <Col>
                                <div style={{ padding: "0.5vh" }}>
                                    <Button variant="danger" onClick={() => toggleMassDelete()} >Allow Mass Delete</Button>
                                </div>
                            </Col> : <></>

                        }

                    </Row>
                    <FormControl
                        placeholder="Search..."
                        aria-label="Search"
                        aria-describedby="basic-addon2"
                        value={searchTerm}
                        onChange={(e) => setSearchTerm(e.target.value)}
                    />


                    <div>
                        {/* <div style={{ padding: "0.5vh" }}>
                            <Card style={{ maxWidth: '15rem', minWidth: "15rem", maxHeight: "15rem", minHeight: "15rem", color: "black", "borderStyle": "solid", "borderColor": "green", "borderWidth": "0.5rem", "alignItems": "center", "justifyContent": "center" }} onClick={() => (redirect("/createRecipe"))}>
                                <Card.Body style={{ overflow: "hidden" }}>
                                    <Card.Title>{String("New Recipe")}</Card.Title>
                                    <Card.Img style={{ maxHeight: "15rem", maxWidth: "15rem" }} variant="top" src={"add.jpg"} />
                                </Card.Body>

                            </Card>
                        </div> */}
                        <Row xl={5} lg={4} md={3} sm={2} xs={1}>
                            {filteredRecipes.map((recipe) => {
                                return (
                                    <Col key={recipe._id}>
                                        <ImageCard recipe={recipe}
                                            allowDelete={allowDelete}
                                            onDelete={deleteRecipe}
                                            onRedirect={redirect}
                                        ></ImageCard>
                                    </Col>
                                )
                            })}
                        </Row>
                    </div>

                    {/* <Button onClick={() => console.log(recipes)}> show Recipes</Button> */}
                </main>

                <footer className={styles.footer}>
                    <a
                        href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
                        target="_blank"
                        rel="noopener noreferrer"
                    >

                    </a>
                </footer>
            </div>
        </div>
    )
}
